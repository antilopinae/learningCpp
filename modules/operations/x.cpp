class X
{
public:
    X(int x); //обычный конструктор
    X(); //конструктор по умолчанию
    X(const X&); //копирующий конструктор
    X(X&&); //перемещающий конструктор
    X& operator=(const X&); //копирующее присваивание:
    //очистка целевого обьекта и копирование

    X& operator=(X&&); //перемещающее присваивание:
    //очистка целевого обьекта и перемещение

    ~X(); //деструктор: очистка обьекта
};

//Y(const Y&) = default; по умолчанию
//Shape& operator=(const Shape&) =delete;

class Vector
{
public:
    explicit Vector(int s); //теперь нельзя написать Vector v = 7;
    //нет неявного преобразования
};
